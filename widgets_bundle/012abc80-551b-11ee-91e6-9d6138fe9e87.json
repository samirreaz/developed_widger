{
  "entityType" : "WIDGETS_BUNDLE",
  "entity" : {
    "alias" : "bat",
    "description" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGETS_BUNDLE",
      "id" : "012abc80-551b-11ee-91e6-9d6138fe9e87"
    },
    "image" : null,
    "name" : "BAT",
    "title" : "BAT"
  },
  "widgets" : [ {
    "alias" : "dashboard",
    "name" : "Dashboard",
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 6.5,
      "resources" : [ {
        "url" : "https://cdn.jsdelivr.net/npm/chart.js"
      } ],
      "templateHtml" : "<div class=\"dwrapper\">\n    <div class=\"p-content\" [style.height]=\"height+'px'\">\n        <div class=\"header\" fxLayout=\"row\"  fxLayout.xs=\"column\" fxLayout.sm=\"column\" >\n        \t<div fxFlex=\"50\">\n        \t\t<div class=\"button-group\">\n        \t\t    <div class=\"sbutton\">\n        \t\t        <button mat-button color=\"primary\" class=\"today active\" (click)=\"changeType($event)\">Today</button>\n        \t\t        <button mat-button color=\"primary\" class=\"daily\" (click)=\"changeType($event)\">Daily</button>\n        \t\t        <button mat-button color=\"primary\" class=\"monthly\" (click)=\"changeType($event)\">Monthly</button>\n        \t\t        <button mat-button color=\"primary\" class=\"yearly\" (click)=\"changeType($event)\">Yearly</button>\n        \t\t        <button mat-button color=\"primary\" class=\"custom\" (click)=\"changeType($event)\">Custom</button>\n        \t\t    </div>\n        \t\t</div>\n        \t</div>\n        \t<div fxFlex=\"50\">\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Today'\">\n        \t\t    <div class=\"time\">Time: {{time|date: 'hh:mm:ss a'}}</div>\n        \t\t    <div class=\"date\">Date: {{time|date: 'dd-MM-YYYY'}}</div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Daily'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"daily\"\n                                (click)=\"openDatePicker(pickerDay)\"\n                                placeholder=\"Select Date\"\n                                (dateChange)=\"selectFromPicker($event, pickerDay, 'YYYY-MM-DD', 'daily')\"\n                                [matDatepicker]=\"pickerDay\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerDay\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickerDay></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Monthly'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"monthly\"\n                                placeholder=\"Select Month\"\n                                (click)=\"openDatePicker(pickerMonth)\"\n                                [matDatepicker]=\"pickerMonth\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerMonth\"></mat-datepicker-toggle>\n                            <mat-datepicker startView=\"year\" #pickerMonth (monthSelected)=\"selectFromPicker($event, pickerMonth, 'YYYY-MM', 'monthly')\"></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Yearly'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"year\"\n                                placeholder=\"Select Year\"\n                                (click)=\"openDatePicker(pickerYear)\"\n                                [matDatepicker]=\"pickerYear\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerYear\"></mat-datepicker-toggle>\n                            <mat-datepicker startView=\"multi-year\" #pickerYear (yearSelected)=\"selectFromPicker($event, pickerYear, 'YYYY', 'year')\"></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Custom'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"startDate\"\n                                placeholder=\"Start Date\"\n                                (click)=\"openDatePicker(startDate)\"\n                                (dateChange)=\"selectFromPicker($event, startDate, 'YYYY-MM-DD', 'startDate', 'start')\"\n                                [matDatepicker]=\"startDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #startDate></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t    <div class=\"end_date\" fxFlex=\"50\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput id=\"endDate\" placeholder=\"End Date\" (click)=\"openDatePicker(endDate)\" [matDatepicker]=\"endDate\" (dateChange)=\"selectFromPicker($event, endDate, 'YYYY-MM-DD', 'endDate', 'end')\">\n                            <mat-datepicker-toggle matSuffix [for]=\"endDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #endDate></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t</div>\n        </div>\n        <div class=\"satl-pt1\" style=\"margin: 0.5% 0;\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"height: 100%;\">\n                    <canvas id=\"doughnut1\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"height: 100%;\">\n                    <p style=\"font-size: 17px; line-height: 0; color: white;position: absolute;\">Energy consumption trend</p>\n                        <canvas id=\"line1\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div style=\"display:flex\">\n                            <mat-icon>currency_yen</mat-icon>\n                            <p style=\"line-height: 0; padding-left: 5%; font-size: 16px; color: white;\">Distribution Losses (Yesterday)</p>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                T1 <span style=\"background-color: #005b87; padding: 4px\">67.7</span> kWh\n                            </div>\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                T2 <span style=\"background-color: #005b87; padding: 4px\">67.7</span> kWh\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"a2\">\n                        <div style=\"display:flex; padding-top: 5%;\">\n                            <mat-icon>battery_charging_full </mat-icon>\n                            <p style=\"line-height: 0; padding-left: 5%; font-size: 16px; color: white;\">Power factor incentive</p>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                <span style=\"background-color: #005b87; padding: 4px\">67.7</span> PF\n                            </div>\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                <span style=\"background-color: #005b87; padding: 4px\">67.7</span> %\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\">\n                                <div style=\"display:flex\">\n                                    <mat-icon>forest</mat-icon>\n                                    <p style=\"line-height: 0; font-size: 15px; color: white; padding-left: 5%;\">Equiv. Tree</p>\n                                </div>\n                                \n                                <div style=\"background-color: #017dbb; padding: 7px\"><span style=\"background-color: #005b87; padding: 4px\">67.7</span> No.\n                                </div>\n                            </div>\n                            <div fxFlex=\"50\">\n                                <div style=\"display:flex;\">\n                                    <mat-icon>cloud</mat-icon>\n                                    <p style=\"line-height: 0; font-size: 13px; color: white; padding-left: 5%;\">CO<sub>2</sub> Avoided</p>\n                                </div>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">ETP Out Flow</p>\n                                <div style=\"background-color: #017dbb; padding: 7px;\"><span style=\"background-color: #005b87; padding: 4px\">67.7</span> No.\n                                </div>\n                            </div>\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">Water Recycling</p>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">ETP Efficiency</p>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"satl-pt1\" style=\"margin-bottom: 0.5%;\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24\" fxLayout=\"column\" fxLayoutGap=\"10px\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" style=\"padding-right:10px;\">\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between\">\n                    <div fxFlex=\"50\">\n                        <mat-card class=\"pt-m\">\n                            <canvas id=\"meterGaugeChart1\"></canvas>\n                        </mat-card>\n                        \n                    </div>\n                    <div fxFlex=\"50\">\n                        <mat-card class=\"pt-m\">\n                            <canvas id=\"pf_chart\"></canvas>\n                        </mat-card>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between\">\n                        <div fxFlex=\"50\">\n                            <mat-card class=\"pt-m\">\n                                <canvas id=\"md_max_chart\"></canvas>\n                            </mat-card>\n                        </div>\n                        <div fxFlex=\"50\">\n                            <mat-card class=\"pt-m\">\n                                <canvas id=\"md_hightest_chart\"></canvas>\n                            </mat-card>\n                        </div>\n                    </div>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Solar</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\">\n                                    <mat-icon>home</mat-icon>\n                                    Performance Ratio (%)\n                                </div>\n                                <!--</div>-->\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M20,12H4L2,22h20L20,12z M18.36,14l0.4,2H13v-2H18.36z M11,14v2H5.24l0.4-2H11z M4.84,18H11v2H4.44L4.84,18z M13,20v-2 h6.16l0.4,2H13z\"/><rect height=\"3\" width=\"2\" x=\"11\" y=\"8\"/><rect height=\"3\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -0.2089 14.6085)\" width=\"2\" x=\"16.53\" y=\"6.06\"/><rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -3.448 6.7885)\" width=\"3\" x=\"4.97\" y=\"6.56\"/><rect height=\"2\" width=\"3\" x=\"3\" y=\"2\"/><rect height=\"2\" width=\"3\" x=\"18\" y=\"2\"/><path d=\"M12,7c2.76,0,5-2.24,5-5h-2c0,1.65-1.35,3-3,3S9,3.65,9,2H7C7,4.76,9.24,7,12,7z\"/></g></g></svg>\n                                     <div>Performance Ratio (%)</div></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%\">Specific Energy (%)</div></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"25\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Air</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>air</mat-icon><div style=\"text-align:center; width:100%;\">Loss (%)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>tire_repair</mat-icon><div style=\"text-align:center; width:100%;\">Air Consumption (CFM)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayoutGap=\"10px\" fxLayout.sm=\"column\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\">\n                                    \n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%;\">Specific Energy (dw/m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Water</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>water</mat-icon><div style=\"text-align:center; width:100%;\">Loss (%)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>water_loss</mat-icon><div style=\"text-align:center; width:100%;\">Total Consumption (m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd; display: flex; justify-content: center; align-items: center; \">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 44px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\">\n                                    \n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%;\">Specific Energy (dw/m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black; text-style:bold;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"satl-pt1\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\">\n                    <canvas id=\"doughnut2\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Steam</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayout.sm=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>local_fire_department</mat-icon><div style='text-align: center;'>Steam Flow (m3/Hour)</div></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">5759</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">6200</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>hot_tub</mat-icon><span style='text-align: center;'>Steam Consumption (m3)</span></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"25\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Steam</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayout.sm=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 38px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>local_fire_department</mat-icon><div style='text-align: center;'>Steam Flow (m3/Hour)</div></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">5759</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">6200</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 38px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>hot_tub</mat-icon><span style='text-align: center;'>Steam Consumption (m3)</span></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Furnace oil</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayout.sm=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 38px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>local_gas_station</mat-icon><div style='text-align: center; width: 100%;'>Oil Flow (L/h)</div></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">5759</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">6200</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayoutGap=\"10px\" fxLayout.sm=\"row\" style=\"height: 38px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>hot_tub</mat-icon><span style='text-align: center; width: 100%;'>Oil consumption (L)</span></div>\n                                <div fxFlex=\"25\" style=\"background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        \n    </div>\n</div>",
      "templateCss" : "*{\n    color: white;\n}\n/***************************\n****Scrollbar settings******\n****************************/\n.dwrapper{\n    overflow-y: auto;\n}\ndiv.dwrapper::-webkit-scrollbar,\n.report-view::-webkit-scrollbar{\n  width: 15px;\n  background-color: gray;\n}\ndiv.dwrapper{\n  scrollbar-width: thin;\n  scrollbar-color: #90A4AE #CFD8DC;\n}\ndiv.dwrapper::-webkit-scrollbar-track{\n  background: #CFD8DC;\n}\ndiv.dwrapper::-webkit-scrollbar-thumb{\n  background-color: #90A4AE ;\n  border-radius: 6px;\n  border: 3px solid #CFD8DC;\n}\n\n/*************************************\n*******Header form settings***********\n*************************************/\n.header{\n    background-color: #017dbb;\n    padding: 5px;\n}\n.sbutton button{\n    padding: 0 15px!important;\n    color: white!important;\n}\n.sbutton button.active{\n    background-color: #052c50;\n}\n.form{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-content: center;\n    flex-wrap: wrap;\n    align-items: center;\n    height: 100%;\n}\n.form .time,\n.form .date,\n.form .start_date,\n.form .end_date{\n    padding: 0 20px;\n}\n\n\n\n/****************************************************\n******Angular material date picker resize************\n*****************************************************/\n.mat-form-field-appearance-outline .mat-form-field-wrapper{\n    margin: 0!important;\n}\n.mat-form-field-wrapper{\n    padding: 0!important;\n}\n.mat-form-field-appearance-outline .mat-form-field-infix {\n    padding: 0!important;\n    top: -5px; \n}\ninput.mat-input-element {\n    margin-top: 5px!important;\n}\n/******************************************************\n*******Angular material datepicker change color********\n***************Border, Placeholder and Icon************\n******************************************************/\n.mat-form-field-appearance-outline .mat-form-field-outline {\n    color: white!important;\n}\nmat-datepicker-toggle button{\n    color: white!important;\n}\n.mat-form-field-outline,\n  .mat-form-field-empty.mat-form-field-label,\n  .mat-form-field-label,\n  .mat-form-field-underline,\n  .mat-input-element,\n  ::placeholder {\n    color:white!important;\n}\n\n.pt-m{\n    background: linear-gradient(180deg, #020933, #052c50)!important;\n}\n.section-header{\n    text-align: center;\n    font-size: 30px;\n    margin: 0;\n}\n.sn{\n    background: linear-gradient(#017dbb, #142750);\n    padding: 8px 5px;\n    border: 1px solid #017dbb;\n    margin-bottom: 10px;\n}",
      "controllerScript" : "self.onInit = function() {\n    const $scope=self.ctx.$scope;\n    $scope.time=new Date();\n    $scope.selectedType='Today';\n    $scope.startDate=moment().format('YYYY-MM-DD 06:00:00');\n    let currentDate=new Date();\n    currentDate.setDate(currentDate.getDate() + 1);\n    $scope.endDate=moment(currentDate).format('YYYY-MM-DD 06:00:00');\n    \n    self.ctx.intvl=setInterval(function(){\n        $scope.time=new Date();\n        self.ctx.detectChanges();\n    }, 1000);\n    $scope.changeType=function(event){\n        $('.active').removeClass('active');\n        $('.'+event.target.textContent.toLowerCase()).addClass('active');\n        $scope.selectedType=event.target.textContent\n        if($scope.selectedType=='Today'){\n            $scope.startDate=moment().format('YYYY-MM-DD 00:00:00');\n            $scope.endDate=moment(currentDate).format('YYYY-MM-DD 23:59:59');\n        }else{\n            $scope.startDate='';\n            $scope.endDate='';\n        }\n        self.ctx.detectChanges();\n    }\n    $scope.openDatePicker=function(picker){\n        picker.open();\n    }\n    $scope.selectFromPicker=function(event, picker, format, id, pos='start'){\n        if($scope.selectedType!='Custom'){\n            $scope.startDate=new Date(moment(event).format(format));\n            let e=new Date(moment(event).format(format));\n            if($scope.selectedType=='Daily'){\n                e.setDate(e.getDate()+1);\n            }else if($scope.selectedType=='Monthly'){\n                e.setMonth(e.getMonth()+1);\n            }else if($scope.selectedType=='Yearly'){\n                e.setFullYear(e.getFullYear()+1);\n            }\n            $scope.endDate=e;\n        }else{\n            if(pos=='start'){\n                $scope.startDate=new Date(moment(event.value).format('YYYY-MM-DD 00:00:00'));\n            }else{\n                $scope.endDate=new Date(moment(event.value).format('YYYY-MM-DD 23:59:59'));\n            }\n        }\n        if($scope.selectedType=='Monthly'||$scope.selectedType=='Yearly'){\n            $(\"#\"+id).val(moment(event).format(format));\n        }\n        picker.close();\n    }\n    showDoughnut1();\n    function showDoughnut1(){\n        const ctx = document.getElementById('doughnut1');\n        const doughnut1Label={\n                id: 'doughnut1Label',\n                afterDraw(chart, args, options){\n                    const {ctx, chartArea:{top,bottom,left,write,width, height}} = chart;\n                    chart.data.datasets.forEach((dataset,i)=>{\n                        chart.getDatasetMeta(i).data.forEach((dataPoint,index)=>{\n                            \n                            const {x,y}=dataPoint.tooltipPosition();\n                            const value = dataPoint.$context.raw;\n                            const percentageValue = value\n                            const text = percentageValue+\"%\";\n                            ctx.font = 'bold 15px sans-serif';\n                            ctx.fillStyle = 'white';\n                            ctx.fillText(text,x-10,y+8);\n                        });\n                    });\n                }\n            }\n            const doughnut1centerText={\n                id: 'doughnutcenterText',\n                afterDatasetsDraw(chart, args, pluginOptions){\n                    const {ctx}=chart;\n                    const text1 = 'Total Energy';\n                    ctx.textAlign = 'center';\n                    ctx.textBaseLine = 'middle';\n                    ctx.font = 'normal 16px sans-serif';\n                    ctx.fillStyle = 'white';\n                    const textWidth1 = ctx.measureText(text1).width;\n                    const x=chart.getDatasetMeta(0).data[0].x;\n                    const y=chart.getDatasetMeta(0).data[0].y;\n                    ctx.fillText(text1,x,y-10);\n                    const text2='Consumption';\n                    ctx.fillText(text2,x,y+10);\n                }\n            }\n      new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['DG', 'Grid', 'Solar'],\n          datasets: [{\n            label: '',\n            data: [18, 36, 46],\n            backgroundColor: [\n              'rgb(0, 250, 175)',\n              'rgb(219, 255, 0)',\n              'rgb(249, 149, 106)'\n            ],\n            \n            hoverOffset: 4,\n            borderWidth: 0\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n                grid: {\n                    display:false\n                },\n                ticks: {\n                    display: false\n                },\n                beginAtZero: true\n            },\n            x: {\n                grid:{\n                    display:false\n                },\n                ticks: {\n                    display: false\n                },\n            }\n          },\n          plugins: {\n            legend: {\n                display: true,\n                position: 'right',\n                align:'center',\n                labels:{\n                   color:'white', \n                },\n                // maxWidth:70\n            },\n            datalabels: {\n              formatter: (value, ctx) => {\n                const datapoints = ctx.chart.data.datasets[0].data\n                 const total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n                const percentage = value / total * 100\n                return percentage.toFixed(2) + \"%\";\n              },\n              color: '#fff',\n            }\n        }\n        },\n        plugins:[doughnut1Label, doughnut1centerText]\n      });\n    }\n    \n    showDoughnut2();\n    function showDoughnut2(){\n        const ctx = document.getElementById('doughnut2').getContext('2d');\n        const doughnut2Label={\n                id: 'doughnut2Label',\n                afterDraw(chart, args, options){\n                    const {ctx, chartArea:{top,bottom,left,write,width, height}} = chart;\n                    chart.data.datasets.forEach((dataset,i)=>{\n                        chart.getDatasetMeta(i).data.forEach((dataPoint,index)=>{\n                            \n                            const {x,y}=dataPoint.tooltipPosition();\n                            const value = dataPoint.$context.raw;\n                            const percentageValue = value\n                            const text = percentageValue+\"%\";\n                            ctx.font = 'bold 15px sans-serif';\n                            ctx.fillStyle = 'white';\n                            ctx.fillText(text,x-10,y+8);\n                        });\n                    });\n                }\n            }\n            const doughnut2centerText={\n                id: 'doughnutcenter2Text',\n                afterDatasetsDraw(chart, args, pluginOptions){\n                    const {ctx}=chart;\n                    const text1 = 'Utility';\n                    ctx.textAlign = 'center';\n                    ctx.textBaseLine = 'middle';\n                    ctx.font = 'normal 16px sans-serif';\n                    ctx.fillStyle = 'white';\n                    const textWidth1 = ctx.measureText(text1).width;\n                    const x=chart.getDatasetMeta(0).data[0].x;\n                    const y=chart.getDatasetMeta(0).data[0].y;\n                    ctx.fillText(text1,x,y-10);\n                    const text2='Cost';\n                    ctx.fillText(text2,x,y+10);\n                }\n            }\n      new Chart(ctx, {\n        type: 'doughnut',\n        data: {\n          labels: ['DG', 'Grid', 'Solar'],\n          datasets: [{\n            label: '',\n            data: [18, 36, 46],\n            backgroundColor: [\n              'rgb(0, 250, 175)',\n              'rgb(219, 255, 0)',\n              'rgb(249, 149, 106)'\n            ],\n            hoverOffset: 4,\n            borderWidth: 0\n          }]\n        },\n        options: {\n            maintainAspectRatio: true,\n            aspectRatio: 1.55,\n          scales: {\n            y: {\n                grid: {\n                    display:false\n                },\n                ticks: {\n                    display: false\n                },\n                beginAtZero: true\n            },\n            x: {\n                grid:{\n                    display:false\n                },\n                ticks: {\n                    display: false\n                },\n            }\n          },\n          plugins: {\n            legend: {\n                display: true,\n                position: 'right',\n                align:'center',\n                labels:{\n                    color:'white'\n                }\n            },\n            datalabels: {\n              formatter: (value, ctx) => {\n                const datapoints = ctx.chart.data.datasets[0].data\n                 const total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n                const percentage = value / total * 100\n                return percentage.toFixed(2) + \"%\";\n              },\n              color: '#fff',\n            }\n        }\n        },\n        plugins:[doughnut2Label, doughnut2centerText]\n      });\n    }\n    \n    \n    drawLine1Chart();\n    function drawLine1Chart(){\n        Chart.defaults.color = \"#ffffff\";\n        ctx2 = document.getElementById('line1').getContext('2d');\n        const labels=[];\n        const data1=[];\n        const bgColor1=[];\n        const data2=[];\n        const bgColor2=[];\n        const data3=[];\n        const bgColor3=[];\n        for(let i=new Date(moment().format('YYYY-08-20 00:00:00')); i<new Date();){\n            labels.push(moment(i).format('YYYY-MM-DD'));\n            data1.push(Math.random()*50+50);\n            bgColor1.push('rgb(0, 250, 175)');\n            data2.push(Math.random()*50+50);\n            bgColor2.push('rgb(219, 255, 0)');\n            data3.push(Math.random()*50+50);\n            bgColor3.push('rgb(249, 149, 106)');\n            i.setDate(i.getDate()+1);\n        }\n        self.ctx.chart2=new Chart(ctx2, {\n        type: 'bar',\n        data: {\n            labels:labels,\n            datasets: [\n                {\n                    label: 'DG',\n                    data: data1,\n                    backgroundColor: bgColor1,\n                },\n                {\n                    label: 'Grid',\n                    data: data2,\n                    backgroundColor: bgColor2,\n                },\n                {\n                    label: 'Solar',\n                    data: data3,\n                    backgroundColor: bgColor3,\n                }\n            ]\n            \n        },\n        options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            aspectRatio: 1,\n            scales: {\n                x: {\n                    stacked: true,\n                    grid: {\n                        color: 'white'\n                    }\n                },\n                y: {\n                    \n                    grid: {\n                        color: 'white'\n                    },\n                    stacked: true,\n                    title: {\n                      display: true,\n                      text: 'MegaWatt'\n                    },\n                }\n             },\n             plugins:{\n                legend: {\n                    display: true,\n                    position: 'top',\n                    align:'end',\n                    labels:{\n                        color:'white', \n                    },\n                },\n                // title:{\n                //     align:'start',\n                //     display:true,\n                //     text:'Energy consumption trend'\n                // }\n             }\n        }\n      });\n    }\n    \n    solar();\n    function solar(){\n    //     const ctx = document.getElementById('meterGaugeChart1').getContext('2d');\n    //     const doughnut2Label={\n    //             id: 'doughnut2Label',\n    //             afterDraw(chart, args, options){\n    //                 const {ctx, chartArea:{top,bottom,left,write,width, height}} = chart;\n    //                 chart.data.datasets.forEach((dataset,i)=>{\n    //                     chart.getDatasetMeta(i).data.forEach((dataPoint,index)=>{\n                            \n    //                         const {x,y}=dataPoint.tooltipPosition();\n    //                         const value = dataPoint.$context.raw;\n    //                         const percentageValue = value\n    //                         const text = percentageValue+\"%\";\n    //                         ctx.font = 'bold 15px sans-serif';\n    //                         ctx.fillStyle = 'white';\n    //                         ctx.fillText(text,x-10,y+8);\n    //                     });\n    //                 });\n    //             }\n    //         }\n    //     const doughnut2centerText={\n    //             id: 'doughnutcenter2Text',\n    //             afterDatasetsDraw(chart, args, pluginOptions){\n    //                 const {ctx}=chart;\n    //                 const text1 = 'Utility';\n    //                 ctx.textAlign = 'center';\n    //                 ctx.textBaseLine = 'middle';\n    //                 ctx.font = 'normal 16px sans-serif';\n    //                 ctx.fillStyle = 'white';\n    //                 const textWidth1 = ctx.measureText(text1).width;\n    //                 const x=chart.getDatasetMeta(0).data[0].x;\n    //                 const y=chart.getDatasetMeta(0).data[0].y;\n    //                 ctx.fillText(text1,x,y-10);\n    //                 const text2='Cost';\n    //                 ctx.fillText(text2,x,y+10);\n    //             }\n    //         }\n    //     new Chart(ctx, {\n    //     type: 'doughnut',\n    //     data: {\n    //       labels: ['DG', 'Grid', 'Solar'],\n    //       datasets: [{\n    //         label: '',\n    //         data: [18, 36, 46],\n    //         backgroundColor: [\n    //           'rgb(0, 250, 175)',\n    //           'rgb(219, 255, 0)',\n    //           'rgb(249, 149, 106)'\n    //         ],\n    //         hoverOffset: 4,\n    //         borderWidth: 0\n    //       }]\n    //     },\n    //     options: {\n    //         maintainAspectRatio: true,\n    //         aspectRatio: 1.55,\n    //       scales: {\n    //         y: {\n    //             grid: {\n    //                 display:false\n    //             },\n    //             ticks: {\n    //                 display: false\n    //             },\n    //             beginAtZero: true\n    //         },\n    //         x: {\n    //             grid:{\n    //                 display:false\n    //             },\n    //             ticks: {\n    //                 display: false\n    //             },\n    //         }\n    //       },\n    //       plugins: {\n    //         legend: {\n    //             display: true,\n    //             position: 'right',\n    //             align:'center',\n    //             labels:{\n    //                 color:'white'\n    //             }\n    //         },\n    //         datalabels: {\n    //           formatter: (value, ctx) => {\n    //             const datapoints = ctx.chart.data.datasets[0].data\n    //              const total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n    //             const percentage = value / total * 100\n    //             return percentage.toFixed(2) + \"%\";\n    //           },\n    //           color: '#fff',\n    //         }\n    //     }\n    //     },\n    //     plugins:[doughnut2Label, doughnut2centerText]\n    //   });\n        const gaugeText = {\n\t\tid: 'gaugeText',\n\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\tconst {\n\t\t\t\tctx,\n\t\t\t\tdata,\n\t\t\t\tchartArea: {\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tr\n\t\t\t\t}\n\t\t\t} = chart;\n\t\t\t\n\t\t\tlet doughnutSize=height>width?width:height;\n// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\t\t\t\n\t\t\tctx.save();\n\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\tctx.font = '15px sans-serfi';\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.textBaseLine = 'top';\n// \t\t\tctx.textAlign = 'left';\n// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n// \t\t\tctx.textAlign = 'center';\n// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\tctx.font = '20px sans-serfi';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.fillText(pluginOptions.prod_perh + \"%\", xCoor, yCoor - 20);\n\t\t\tctx.font = '20px bold sans-serfi';\n// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\tctx.fillText(\"2148 KV\", xCoor, yCoor+10);\n\t\t}\n\t};\n        const meter_chart_conf = {\n\t\ttype: 'doughnut',\n\t\tdata: {\n\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\tdatasets: [{\n\t\t\t\tlabel: '# of Votes',\n\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\tborderWidth: 0,\n\t\t\t\tcircumference: 180,\n\t\t\t\trotation: 270,\n\t\t\t\tcutout: '70%',\n\t\t\t\tborderRadius: 0,\n\t\t\t\tneedleValue: 55,\n\t\t\t}]\n\t\t},\n\t\toptions: {\n\t\t\taspectRatio: 2,\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n                title: {\n                    // align:'start',\n                    display: true,\n                    text: 'Solar Generation',\n                },\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\tgaugeText: {\n\t\t\t\t\tprod_perh: 50,\n\t\t\t\t\tprod_terph: 10,\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\tplugins: [gaugeText]\n\t};\n    \n        const meter_ctx = document.getElementById('meterGaugeChart1');\n        let meter_context =new Chart(meter_ctx, meter_chart_conf);\n    }\n    \n    pe();\n    function pe(){\n        const gaugeText = {\n\t\tid: 'gaugeText',\n\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\tconst {\n\t\t\t\tctx,\n\t\t\t\tdata,\n\t\t\t\tchartArea: {\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tr\n\t\t\t\t}\n\t\t\t} = chart;\n\t\t\t\n\t\t\tlet doughnutSize=height>width?width:height;\n// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\t\t\t\n\t\t\tctx.save();\n\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\tctx.font = '15px sans-serfi';\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.textBaseLine = 'top';\n// \t\t\tctx.textAlign = 'left';\n// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n// \t\t\tctx.textAlign = 'center';\n// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\tctx.font = '20px sans-serfi';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.fillText(pluginOptions.prod_perh, xCoor, yCoor - 20);\n\t\t\tctx.font = '20px bold sans-serfi';\n// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" PF\", xCoor, yCoor+10);\n\t\t}\n\t};\n        const meter_chart_conf = {\n\t\ttype: 'doughnut',\n\t\tdata: {\n\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\tdatasets: [{\n\t\t\t\tlabel: '# of Votes',\n\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\tborderWidth: 0,\n\t\t\t\tcircumference: 180,\n\t\t\t\trotation: 270,\n\t\t\t\tcutout: '70%',\n\t\t\t\tborderRadius: 0,\n\t\t\t\tneedleValue: 55,\n\t\t\t}]\n\t\t},\n\t\toptions: {\n\t\t\taspectRatio: 2,\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n                title: {\n                    // align:'start',\n                    display: true,\n                    text: 'PF',\n                },\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\tgaugeText: {\n\t\t\t\t\tprod_perh: 0.965,\n\t\t\t\t\tdoughnutBottomValue: 1,\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\tplugins: [gaugeText]\n\t};\n    \n        const pf_chart_ctx = document.getElementById('pf_chart');\n        let meter_context =new Chart(pf_chart_ctx, meter_chart_conf);\n    }\n    \n    md_max();\n    function md_max(){\n        const gaugeText = {\n\t\tid: 'gaugeText',\n\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\tconst {\n\t\t\t\tctx,\n\t\t\t\tdata,\n\t\t\t\tchartArea: {\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tr\n\t\t\t\t}\n\t\t\t} = chart;\n\t\t\t\n\t\t\tlet doughnutSize=height>width?width:height;\n// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\t\t\t\n\t\t\tctx.save();\n\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\tctx.font = '15px sans-serfi';\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.textBaseLine = 'top';\n// \t\t\tctx.textAlign = 'left';\n// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n// \t\t\tctx.textAlign = 'center';\n// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\tctx.font = '20px sans-serfi';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.fillText(pluginOptions.doughnutCenterValue , xCoor, yCoor - 20);\n\t\t\tctx.font = '20px bold sans-serfi';\n// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" MV\", xCoor, yCoor+10);\n\t\t}\n\t};\n        const meter_chart_conf = {\n\t\ttype: 'doughnut',\n\t\tdata: {\n\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\tdatasets: [{\n\t\t\t\tlabel: '# of Votes',\n\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\tbackgroundColor: ['rgb(210, 85, 31)', 'rgb(217, 217, 217)'],\n\t\t\t\tborderWidth: 0,\n\t\t\t\tcircumference: 180,\n\t\t\t\trotation: 270,\n\t\t\t\tcutout: '70%',\n\t\t\t\tborderRadius: 0,\n\t\t\t\tneedleValue: 55,\n\t\t\t}]\n\t\t},\n\t\toptions: {\n\t\t\taspectRatio: 2,\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n                title: {\n                    // align:'start',\n                    display: true,\n                    text: 'MD (max)',\n                },\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\tgaugeText: {\n\t\t\t\t\tdoughnutCenterValue: 3.34,\n\t\t\t\t\tdoughnutBottomValue: 10,\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\tplugins: [gaugeText]\n\t};\n    \n        const md_max_chart_ctx = document.getElementById('md_max_chart');\n        new Chart(md_max_chart_ctx, meter_chart_conf);\n    }\n    \n    md_highest();\n    function md_highest(){\n        const gaugeText = {\n\t\tid: 'gaugeText',\n\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\tconst {\n\t\t\t\tctx,\n\t\t\t\tdata,\n\t\t\t\tchartArea: {\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t\t\tleft,\n\t\t\t\t\tright,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tr\n\t\t\t\t}\n\t\t\t} = chart;\n\t\t\t\n\t\t\tlet doughnutSize=height>width?width:height;\n// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\t\t\t\n\t\t\tctx.save();\n\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\tctx.font = '15px sans-serfi';\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.textBaseLine = 'top';\n// \t\t\tctx.textAlign = 'left';\n// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n// \t\t\tctx.textAlign = 'center';\n// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\tctx.font = '20px sans-serfi';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.fillText(pluginOptions.prod_perh, xCoor, yCoor - 20);\n\t\t\tctx.font = '20px bold sans-serfi';\n// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" MV\", xCoor, yCoor+10);\n\t\t}\n\t};\n        const meter_chart_conf = {\n\t\ttype: 'doughnut',\n\t\tdata: {\n\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\tdatasets: [{\n\t\t\t\tlabel: '# of Votes',\n\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\tborderWidth: 0,\n\t\t\t\tcircumference: 180,\n\t\t\t\trotation: 270,\n\t\t\t\tcutout: '70%',\n\t\t\t\tborderRadius: 0,\n\t\t\t\tneedleValue: 55,\n\t\t\t}]\n\t\t},\n\t\toptions: {\n\t\t\taspectRatio: 2,\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n                title: {\n                    // align:'start',\n                    display: true,\n                    text: 'MD (highest) for month',\n                },\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\tgaugeText: {\n\t\t\t\t\tprod_perh: 33.3,\n\t\t\t\t\tdoughnutBottomValue: 10,\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\tplugins: [gaugeText]\n\t};\n    \n        const md_hightest_ctx = document.getElementById('md_hightest_chart');\n        new Chart(md_hightest_ctx, meter_chart_conf);\n    }\n    self.onResize();\n}\nself.onResize=function(){\n    const $scope=self.ctx.$scope;\n    $scope.height=self.ctx.height;\n    $scope.width=self.ctx.width;\n}\nself.onDestroy = function() {\n    clearInterval(self.ctx.intvl);\n}\n",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Dashboard\"}"
    },
    "bundleAlias" : "bat",
    "createdTime" : 1694928531956,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "162c8b40-551b-11ee-91e6-9d6138fe9e87"
    },
    "tenantId" : {
      "entityType" : "TENANT",
      "id" : "6a594940-e4c5-11ed-8f65-1f1c5e01f03a"
    }
  } ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}