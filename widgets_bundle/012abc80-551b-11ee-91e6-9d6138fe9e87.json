{
  "entityType" : "WIDGETS_BUNDLE",
  "entity" : {
    "alias" : "bat",
    "description" : null,
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGETS_BUNDLE",
      "id" : "012abc80-551b-11ee-91e6-9d6138fe9e87"
    },
    "image" : null,
    "name" : "BAT",
    "title" : "BAT"
  },
  "widgets" : [ {
    "alias" : "dashboard",
    "name" : "Dashboard",
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 9,
      "sizeY" : 6.5,
      "resources" : [ {
        "url" : "https://cdn.jsdelivr.net/npm/chart.js"
      } ],
      "templateHtml" : "<div class=\"dwrapper\">\n    <div fxLayout=\"column\" fxLayoutGap=\".5%\" class=\"p-content\" [style.height]=\"height+'px'\">\n        <div class=\"header\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\"  fxLayout.xs=\"column\" fxLayout.sm=\"column\" >\n        \t<div fxFlex=\"50\" fxLayout=\"row wrap\">\n        \t\t<div class=\"button-group\">\n        \t\t    <div class=\"sbutton\">\n        \t\t        <button mat-button color=\"primary\" class=\"today active\" (click)=\"changeType($event)\">Today</button>\n        \t\t        <button mat-button color=\"primary\" class=\"daily\" (click)=\"changeType($event)\">Daily</button>\n        \t\t        <button mat-button color=\"primary\" class=\"monthly\" (click)=\"changeType($event)\">Monthly</button>\n        \t\t        <button mat-button color=\"primary\" class=\"yearly\" (click)=\"changeType($event)\">Yearly</button>\n        \t\t        <button mat-button color=\"primary\" class=\"custom\" (click)=\"changeType($event)\">Custom</button>\n        \t\t    </div>\n        \t\t</div>\n        \t</div>\n        \t<div fxFlex=\"50\" fxLayout=\"row wrap\">\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Today'\" fxLayout=\"row\">\n        \t\t    <div class=\"time\">Time: {{time|date: 'hh:mm:ss a'}}</div>\n        \t\t    <div class=\"date\">Date: {{time|date: 'dd-MM-YYYY'}}</div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Daily'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"daily\"\n                                (click)=\"openDatePicker(pickerDay)\"\n                                placeholder=\"Select Date\"\n                                (dateChange)=\"selectFromPicker($event, pickerDay, 'YYYY-MM-DD', 'daily')\"\n                                [matDatepicker]=\"pickerDay\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerDay\"></mat-datepicker-toggle>\n                            <mat-datepicker #pickerDay></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Monthly'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"monthly\"\n                                placeholder=\"Select Month\"\n                                (click)=\"openDatePicker(pickerMonth)\"\n                                [matDatepicker]=\"pickerMonth\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerMonth\"></mat-datepicker-toggle>\n                            <mat-datepicker startView=\"year\" #pickerMonth (monthSelected)=\"selectFromPicker($event, pickerMonth, 'YYYY-MM', 'monthly')\"></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Yearly'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\" fxFlexOffset=\"25%\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"year\"\n                                placeholder=\"Select Year\"\n                                (click)=\"openDatePicker(pickerYear)\"\n                                [matDatepicker]=\"pickerYear\">\n                            <mat-datepicker-toggle matSuffix [for]=\"pickerYear\"></mat-datepicker-toggle>\n                            <mat-datepicker startView=\"multi-year\" #pickerYear (yearSelected)=\"selectFromPicker($event, pickerYear, 'YYYY', 'year')\"></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t\t<div class=\"form\" *ngIf=\"selectedType=='Custom'\" fxLayout=\"row\">\n        \t\t    <div class=\"start_date\" fxFlex=\"50\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput\n                                id=\"startDate\"\n                                placeholder=\"Start Date\"\n                                (click)=\"openDatePicker(startDate)\"\n                                (dateChange)=\"selectFromPicker($event, startDate, 'YYYY-MM-DD', 'startDate', 'start')\"\n                                [matDatepicker]=\"startDate\">\n                            <mat-datepicker-toggle matSuffix [for]=\"startDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #startDate></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t    <div class=\"end_date\" fxFlex=\"50\">\n                        <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n                            <input matInput id=\"endDate\" placeholder=\"End Date\" (click)=\"openDatePicker(endDate)\" [matDatepicker]=\"endDate\" (dateChange)=\"selectFromPicker($event, endDate, 'YYYY-MM-DD', 'endDate', 'end')\">\n                            <mat-datepicker-toggle matSuffix [for]=\"endDate\"></mat-datepicker-toggle>\n                            <mat-datepicker #endDate></mat-datepicker>\n                        </mat-form-field>\n        \t\t    </div>\n        \t\t</div>\n        \t</div>\n        </div>\n        <div class=\"satl-pt1\" fxLayout=\"row wrap\" fxLayoutGap=\".5%\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"height: 100%;\">\n                    <canvas id=\"doughnut1\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"50\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"height: 100%;\">\n                    <p style=\"font-size: 17px; line-height: 0; color: white;position: absolute;\">Energy consumption trend</p>\n                        <canvas id=\"line1\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24.5\" fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutGap.sm=\".5%\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div style=\"display:flex\">\n                            <mat-icon>currency_yen</mat-icon>\n                            <p style=\"line-height: 0; padding-left: 5%; font-size: 16px; color: white;\">Distribution Losses (Yesterday)</p>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                T1 <span style=\"background-color: #005b87; padding: 4px\">67.7</span> kWh\n                            </div>\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                T2 <span style=\"background-color: #005b87; padding: 4px\">67.7</span> kWh\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"a2\">\n                        <div style=\"display:flex; padding-top: 5%;\">\n                            <mat-icon>battery_charging_full </mat-icon>\n                            <p style=\"line-height: 0; padding-left: 5%; font-size: 16px; color: white;\">Power factor incentive</p>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                <span style=\"background-color: #005b87; padding: 4px\">67.7</span> PF\n                            </div>\n                            <div fxFlex=\"50\" style=\"background-color: #017dbb; padding: 7px\">\n                                <span style=\"background-color: #005b87; padding: 4px\">67.7</span> %\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"50\">\n                                <div style=\"display:flex\">\n                                    <mat-icon>forest</mat-icon>\n                                    <p style=\"line-height: 0; font-size: 15px; color: white; padding-left: 5%;\">Equiv. Tree</p>\n                                </div>\n                                \n                                <div style=\"background-color: #017dbb; padding: 7px\"><span style=\"background-color: #005b87; padding: 4px\">67.7</span> No.\n                                </div>\n                            </div>\n                            <div fxFlex=\"50\">\n                                <div style=\"display:flex;\">\n                                    <mat-icon>cloud</mat-icon>\n                                    <p style=\"line-height: 0; font-size: 13px; color: white; padding-left: 5%;\">CO<sub>2</sub> Avoided</p>\n                                </div>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n                <mat-card class=\"pt-m\">\n                    <div class=\"a1\">\n                        <div fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-between\">\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">ETP Out Flow</p>\n                                <div style=\"background-color: #017dbb; padding: 7px;\"><span style=\"background-color: #005b87; padding: 4px\">67.7</span> No.\n                                </div>\n                            </div>\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">Water Recycling</p>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                            <div fxFlex=\"33\">\n                                <p style=\"line-height: 0; font-size: 15px; color: white;\">ETP Efficiency</p>\n                                <div style=\"background-color: #017dbb; padding: 7px\">\n                                    <span style=\"background-color: #005b87; padding: 4px\">67.7</span> KG\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"satl-pt1\" fxLayout=\"row wrap\" fxLayoutGap=\".5%\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24.5\" fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutGap.sm=\".5%\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" >\n                <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayoutGap.sm=\".5%\">\n                    <div fxFlex=\"49\">\n                        <mat-card class=\"pt-m\">\n                            <canvas id=\"meterGaugeChart1\"></canvas>\n                        </mat-card>\n                        \n                    </div>\n                    <div fxFlex=\"49\">\n                        <mat-card class=\"pt-m\">\n                            <canvas id=\"pf_chart\"></canvas>\n                        </mat-card>\n                    </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutGap=\"2%\" fxLayoutGap.sm=\".5%\">\n                        <div fxFlex=\"49\">\n                            <mat-card class=\"pt-m\">\n                                <canvas id=\"md_max_chart\"></canvas>\n                            </mat-card>\n                        </div>\n                        <div fxFlex=\"49\">\n                            <mat-card class=\"pt-m\">\n                                <canvas id=\"md_hightest_chart\"></canvas>\n                            </mat-card>\n                        </div>\n                    </div>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Solar</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout='row'>\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items: center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M20,12H4L2,22h20L20,12z M18.36,14l0.4,2H13v-2H18.36z M11,14v2H5.24l0.4-2H11z M4.84,18H11v2H4.44L4.84,18z M13,20v-2 h6.16l0.4,2H13z\"/><rect height=\"3\" width=\"2\" x=\"11\" y=\"8\"/><rect height=\"3\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -0.2089 14.6085)\" width=\"2\" x=\"16.53\" y=\"6.06\"/><rect height=\"2\" transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 -3.448 6.7885)\" width=\"3\" x=\"4.97\" y=\"6.56\"/><rect height=\"2\" width=\"3\" x=\"3\" y=\"2\"/><rect height=\"2\" width=\"3\" x=\"18\" y=\"2\"/><path d=\"M12,7c2.76,0,5-2.24,5-5h-2c0,1.65-1.35,3-3,3S9,3.65,9,2H7C7,4.76,9.24,7,12,7z\"/></g></g></svg>\n                                     <div style=\"text-align:center; width:100%;\">Performance Ratio (%)</div>\n                                    </div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items: center\">\n                                    \n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M21,14c0-0.55-0.45-1-1-1h-2v2h2C20.55,15,21,14.55,21,14z\"/><path d=\"M20,17h-2v2h2c0.55,0,1-0.45,1-1C21,17.45,20.55,17,20,17z\"/><path d=\"M12,14h-2v4h2c0,1.1,0.9,2,2,2h3v-8h-3C12.9,12,12,12.9,12,14z\"/><path d=\"M5,13c0-1.1,0.9-2,2-2h1.5c1.93,0,3.5-1.57,3.5-3.5S10.43,4,8.5,4H5C4.45,4,4,4.45,4,5c0,0.55,0.45,1,1,1h3.5 C9.33,6,10,6.67,10,7.5S9.33,9,8.5,9H7c-2.21,0-4,1.79-4,4c0,2.21,1.79,4,4,4h2v-2H7C5.9,15,5,14.1,5,13z\"/></g></g></svg>\n                                     <div style=\"text-align:center; width:100%;\">Inverter Efficiency (%)</div>\n                                    </div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items: center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%\">Specific Energy (%)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"25\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Air</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>air</mat-icon><div style=\"text-align:center; width:100%;\">Loss (%)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>tire_repair</mat-icon><div style=\"text-align:center; width:100%;\">Air Consumption (CFM)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\">\n                                    \n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%;\">Specific Energy (dw/m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%;\">\n                    <h1 class=\"section-header\">Water</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>water</mat-icon><div style=\"text-align:center; width:100%;\">Loss (%)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>shower</mat-icon><div style=\"text-align:center; width:100%;\">Total Consumption (m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd; display: flex; justify-content: center; align-items: center; \">23.02</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\">\n                                    \n<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><path d=\"M12,3C12,3,12,3,12,3c-4.8,0-9,3.86-9,9c0,2.12,0.74,4.07,1.97,5.61L3,19.59L4.41,21l1.97-1.97C7.93,20.26,9.88,21,12,21 c2.3,0,4.61-0.88,6.36-2.64C20.12,16.61,21,14.3,21,12l0-9L12,3z M19,12c0,1.87-0.73,3.63-2.05,4.95C15.63,18.27,13.87,19,12,19 c-3.86,0-7-3.14-7-7c0-1.9,0.74-3.68,2.1-4.99C8.42,5.71,10.16,5,12,5l7,0L19,12z\"/><path d=\"M8.46,12.63l4.05,0.4l-2.44,3.33c-0.11,0.16-0.1,0.38,0.04,0.52c0.15,0.15,0.4,0.16,0.56,0.01l5.16-4.63 c0.33-0.3,0.15-0.85-0.3-0.89l-4.05-0.4l2.44-3.33c0.11-0.16,0.1-0.38-0.04-0.52c-0.15-0.15-0.4-0.16-0.56-0.01l-5.16,4.63 C7.84,12.04,8.02,12.59,8.46,12.63z\"/></g></g></svg>\n                                    <div style=\"text-align:center; width:100%;\">Specific Energy (dw/m3)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight: bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black; text-style:bold;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"satl-pt1\" fxLayout=\"row wrap\" fxLayoutGap=\".5%\" fxLayout.xs=\"column\" fxLayout.sm=\"column\">\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"height:100%;\">\n                    <canvas id=\"doughnut2\"></canvas>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Steam</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout fxLayout.xs=\"row\" fxLayout.sm=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height:42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\"><mat-icon>grass</mat-icon><div style='text-align: center;'>Steam Flow (m3/Hour)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">575900</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">62000</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height:42px;\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center\"><mat-icon>hot_tub</mat-icon><span style='text-align: center;'>Steam Consumption (m3)</span></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"25\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Steam</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>local_fire_department</mat-icon><div style='text-align: center;'>Steam Flow (m3/Hour)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">5759</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">6200</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>hot_tub</mat-icon><span style='text-align: center;'>Steam Consumption (m3)</span></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div fxFlex=\"24.5\" fxFlex.sm=\"100\" fxFlex.xs=\"100\">\n                <mat-card class=\"pt-m\" style=\"padding: 7px 0; height:100%\">\n                    <h1 class=\"section-header\">Furnace oil</h1>\n                    <div class=\"section-content\">\n                        <div class=\"hs\">\n                            <div fxLayout=\"row\">\n                                <div fxFlex=\"50\"></div>\n                                <div fxFlex=\"25\">Actual</div>\n                                <div fxFlex=\"25\">Benchmark</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>local_gas_station</mat-icon><div style='text-align: center; width: 100%;'>Oil Flow (L/h)</div></div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">5759</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">6200</div>\n                            </div>\n                        </div>\n                        <div class=\"sn\">\n                            <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"height: 42px\">\n                                <div fxFlex=\"50\" fxLayout=\"row\" style=\"align-items:center;\"><mat-icon>ev_station</mat-icon><span style='text-align: center; width: 100%;'>Oil consumption (L)</span></div>\n                                <div fxFlex=\"25\" style=\" font-weight:bold; color:black; background-color: #0095e0;display: flex; justify-content: center; align-items: center;color: black;\">60.98</div>\n                                <div fxFlex=\"25\" style=\"font-weight:bold; color:black; background-color: #beffbd;display: flex; justify-content: center; align-items: center;color: black;\">23.02</div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n        \n    </div>\n</div>",
      "templateCss" : "*{\n    color: white;\n}\n/***************************\n****Scrollbar settings******\n****************************/\n.dwrapper{\n    overflow-y: auto;\n}\ndiv.dwrapper::-webkit-scrollbar,\n.report-view::-webkit-scrollbar{\n  width: 15px;\n  background-color: gray;\n}\ndiv.dwrapper{\n  scrollbar-width: thin;\n  scrollbar-color: #90A4AE #CFD8DC;\n}\ndiv.dwrapper::-webkit-scrollbar-track{\n  background: #CFD8DC;\n}\ndiv.dwrapper::-webkit-scrollbar-thumb{\n  background-color: #90A4AE ;\n  border-radius: 6px;\n  border: 3px solid #CFD8DC;\n}\n\n/*************************************\n*******Header form settings***********\n*************************************/\n.header{\n    background-color: #017dbb;\n    padding: 5px;\n}\n.sbutton button{\n    padding: 0 15px!important;\n    color: white!important;\n    /*width: 100px!important;*/\n      min-width: unset!important;\n}\n.sbutton button.active{\n    background-color: #052c50;\n}\n.form{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-content: center;\n    flex-wrap: wrap;\n    align-items: center;\n    height: 100%;\n}\n.form .time,\n.form .date,\n.form .start_date,\n.form .end_date{\n    padding: 0 20px;\n}\n\n\n\n/****************************************************\n******Angular material date picker resize************\n*****************************************************/\n.mat-form-field-appearance-outline .mat-form-field-wrapper{\n    margin: 0!important;\n}\n.mat-form-field-wrapper{\n    padding: 0!important;\n}\n.mat-form-field-appearance-outline .mat-form-field-infix {\n    padding: 0!important;\n    top: -5px; \n}\ninput.mat-input-element {\n    margin-top: 5px!important;\n}\n/******************************************************\n*******Angular material datepicker change color********\n***************Border, Placeholder and Icon************\n******************************************************/\n.mat-form-field-appearance-outline .mat-form-field-outline {\n    color: white!important;\n}\nmat-datepicker-toggle button{\n    color: white!important;\n}\n.mat-form-field-outline,\n  .mat-form-field-empty.mat-form-field-label,\n  .mat-form-field-label,\n  .mat-form-field-underline,\n  .mat-input-element,\n  ::placeholder {\n    color:white!important;\n}\n\n.pt-m{\n    background: linear-gradient(180deg, #020933, #052c50)!important;\n}\n.section-header{\n    text-align: center;\n    font-size: 30px;\n    margin: 0;\n}\n.sn{\n    background: linear-gradient(#017dbb, #142750);\n    padding: 8px 5px;\n    border: 1px solid #017dbb;\n    margin-bottom: 10px;\n}",
      "controllerScript" : "self.onInit = function() {\n\tconst $scope = self.ctx.$scope;\n\t$scope.time = new Date();\n\t$scope.selectedType = 'Today';\n\t$scope.startDate = moment().format('YYYY-MM-DD 06:00:00');\n\tlet currentDate = new Date();\n\tcurrentDate.setDate(currentDate.getDate() + 1);\n\t$scope.endDate = moment(currentDate).format('YYYY-MM-DD 06:00:00');\n\n\tself.ctx.intvl = setInterval(function() {\n\t\t$scope.time = new Date();\n\t\tself.ctx.detectChanges();\n\t}, 1000);\n\t$scope.changeType = function(event) {\n\t\t$('.active').removeClass('active');\n\t\t$('.' + event.target.textContent.toLowerCase()).addClass('active');\n\t\t$scope.selectedType = event.target.textContent\n\t\tif ($scope.selectedType == 'Today') {\n\t\t\t$scope.startDate = moment().format('YYYY-MM-DD 00:00:00');\n\t\t\t$scope.endDate = moment(currentDate).format('YYYY-MM-DD 23:59:59');\n\t\t} else {\n\t\t\t$scope.startDate = '';\n\t\t\t$scope.endDate = '';\n\t\t}\n\t\tself.ctx.detectChanges();\n\t}\n\t$scope.openDatePicker = function(picker) {\n\t\tpicker.open();\n\t}\n\t$scope.selectFromPicker = function(event, picker, format, id, pos = 'start') {\n\t\tif ($scope.selectedType != 'Custom') {\n\t\t\t$scope.startDate = new Date(moment(event).format(format));\n\t\t\tlet e = new Date(moment(event).format(format));\n\t\t\tif ($scope.selectedType == 'Daily') {\n\t\t\t\te.setDate(e.getDate() + 1);\n\t\t\t} else if ($scope.selectedType == 'Monthly') {\n\t\t\t\te.setMonth(e.getMonth() + 1);\n\t\t\t} else if ($scope.selectedType == 'Yearly') {\n\t\t\t\te.setFullYear(e.getFullYear() + 1);\n\t\t\t}\n\t\t\t$scope.endDate = e;\n\t\t} else {\n\t\t\tif (pos == 'start') {\n\t\t\t\t$scope.startDate = new Date(moment(event.value).format('YYYY-MM-DD 00:00:00'));\n\t\t\t} else {\n\t\t\t\t$scope.endDate = new Date(moment(event.value).format('YYYY-MM-DD 23:59:59'));\n\t\t\t}\n\t\t}\n\t\tif ($scope.selectedType == 'Monthly' || $scope.selectedType == 'Yearly') {\n\t\t\t$(\"#\" + id).val(moment(event).format(format));\n\t\t}\n\t\tpicker.close();\n\t}\n\tshowDoughnut1();\n\n\tfunction showDoughnut1() {\n\t\tconst ctx = document.getElementById('doughnut1');\n\t\tconst doughnut1Label = {\n\t\t\tid: 'doughnut1Label',\n\t\t\tafterDraw(chart, args, options) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\twrite,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\tlet textSize = doughnutSize / 15;\n\t\t\t\tlet fontHeight = doughnutSize / 25;\n\t\t\t\tchart.data.datasets.forEach((dataset, i) => {\n\t\t\t\t\tchart.getDatasetMeta(i).data.forEach((dataPoint, index) => {\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\ty\n\t\t\t\t\t\t} = dataPoint.tooltipPosition();\n\t\t\t\t\t\tconst value = dataPoint.$context.raw;\n\t\t\t\t\t\tconst percentageValue = value\n\t\t\t\t\t\tconst text = percentageValue + \"%\";\n\t\t\t\t\t\tctx.font = `bold ${textSize}px sans-serif`;\n\t\t\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\t\t\tctx.fillText(text, x - fontHeight, y + fontHeight);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst doughnut1centerText = {\n\t\t\tid: 'doughnutcenterText',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\twrite,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// console.log(\"doughnut\",height,width,doughnutSize)\n\t\t\t\tlet textSize = doughnutSize / 20;\n\t\t\t\tlet fontHeight = doughnutSize / 25;\n\t\t\t\t// console.log(\"Text Size\",textSize)\n\t\t\t\tconst text1 = 'Total Energy';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseLine = 'middle';\n\t\t\t\tctx.font = `normal ${textSize}px sans-serif`;\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tconst textWidth1 = ctx.measureText(text1).width;\n\t\t\t\tconst x = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst y = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\tctx.fillText(text1, x, y - fontHeight);\n\t\t\t\tconst text2 = 'Consumption';\n\t\t\t\tctx.fillText(text2, x, y + fontHeight);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t\tnew Chart(ctx, {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['DG', 'Grid', 'Solar'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdata: [18, 36, 46],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'rgb(0, 250, 175)',\n\t\t\t\t\t\t'rgb(219, 255, 0)',\n\t\t\t\t\t\t'rgb(249, 149, 106)'\n\t\t\t\t\t],\n\n\t\t\t\t\thoverOffset: 4,\n\t\t\t\t\tborderWidth: 0\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbeginAtZero: true\n\t\t\t\t\t},\n\t\t\t\t\tx: {\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// maxWidth:70\n\t\t\t\t\t},\n\t\t\t\t\tdatalabels: {\n\t\t\t\t\t\tformatter: (value, ctx) => {\n\t\t\t\t\t\t\tconst datapoints = ctx.chart.data.datasets[0].data\n\t\t\t\t\t\t\tconst total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n\t\t\t\t\t\t\tconst percentage = value / total * 100\n\t\t\t\t\t\t\treturn percentage.toFixed(2) + \"%\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [doughnut1Label, doughnut1centerText]\n\t\t});\n\t}\n\n\tshowDoughnut2();\n\n\tfunction showDoughnut2() {\n\t\tconst ctx = document.getElementById('doughnut2').getContext('2d');\n\t\tconst doughnut2Label = {\n\t\t\tid: 'doughnut2Label',\n\t\t\tafterDraw(chart, args, options) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\twrite,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\tlet textSize = doughnutSize / 15;\n\t\t\t\tlet fontHeight = doughnutSize / 25;\n\t\t\t\tchart.data.datasets.forEach((dataset, i) => {\n\t\t\t\t\tchart.getDatasetMeta(i).data.forEach((dataPoint, index) => {\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\ty\n\t\t\t\t\t\t} = dataPoint.tooltipPosition();\n\t\t\t\t\t\tconst value = dataPoint.$context.raw;\n\t\t\t\t\t\tconst percentageValue = value\n\t\t\t\t\t\tconst text = percentageValue + \"%\";\n\t\t\t\t\t\tctx.font = `bold ${textSize}px sans-serif`;\n\t\t\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\t\t\tctx.fillText(text, x - fontHeight, y + fontHeight);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst doughnut2centerText = {\n\t\t\tid: 'doughnutcenter2Text',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\twrite,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// console.log(\"doughnut\",height,width,doughnutSize)\n\t\t\t\tlet textSize = doughnutSize / 15;\n\t\t\t\tlet fontHeight = doughnutSize / 25;\n\t\t\t\t// console.log(\"Text Size\",textSize)\n\t\t\t\tconst text1 = 'Utility';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseLine = 'middle';\n\t\t\t\tctx.font = `normal ${textSize}px sans-serif`;\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tconst textWidth1 = ctx.measureText(text1).width;\n\t\t\t\tconst x = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst y = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\tctx.fillText(text1, x, y - fontHeight);\n\t\t\t\tconst text2 = 'Cost';\n\t\t\t\tctx.fillText(text2, x, y + fontHeight);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\n\t\tnew Chart(ctx, {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['DG', 'Grid', 'Solar'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdata: [18, 36, 46],\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'rgb(0, 250, 175)',\n\t\t\t\t\t\t'rgb(219, 255, 0)',\n\t\t\t\t\t\t'rgb(249, 149, 106)'\n\t\t\t\t\t],\n\t\t\t\t\thoverOffset: 4,\n\t\t\t\t\tborderWidth: 0\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\taspectRatio: 1.55,\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbeginAtZero: true\n\t\t\t\t\t},\n\t\t\t\t\tx: {\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdatalabels: {\n\t\t\t\t\t\tformatter: (value, ctx) => {\n\t\t\t\t\t\t\tconst datapoints = ctx.chart.data.datasets[0].data\n\t\t\t\t\t\t\tconst total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n\t\t\t\t\t\t\tconst percentage = value / total * 100\n\t\t\t\t\t\t\treturn percentage.toFixed(2) + \"%\";\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [doughnut2Label, doughnut2centerText]\n\t\t});\n\t}\n\n\n\tdrawLine1Chart();\n\n\tfunction drawLine1Chart() {\n\t\tChart.defaults.color = \"#ffffff\";\n\t\tctx2 = document.getElementById('line1').getContext('2d');\n\t\tconst labels = [];\n\t\tconst data1 = [];\n\t\tconst bgColor1 = [];\n\t\tconst data2 = [];\n\t\tconst bgColor2 = [];\n\t\tconst data3 = [];\n\t\tconst bgColor3 = [];\n\t\tfor (let i = new Date(moment().format('YYYY-08-20 00:00:00')); i < new Date();) {\n\t\t\tlabels.push(moment(i).format('YYYY-MM-DD'));\n\t\t\tdata1.push(Math.random() * 50 + 50);\n\t\t\tbgColor1.push('rgb(0, 250, 175)');\n\t\t\tdata2.push(Math.random() * 50 + 50);\n\t\t\tbgColor2.push('rgb(219, 255, 0)');\n\t\t\tdata3.push(Math.random() * 50 + 50);\n\t\t\tbgColor3.push('rgb(249, 149, 106)');\n\t\t\ti.setDate(i.getDate() + 1);\n\t\t}\n\t\tself.ctx.chart2 = new Chart(ctx2, {\n\t\t\ttype: 'bar',\n\t\t\tdata: {\n\t\t\t\tlabels: labels,\n\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'DG',\n\t\t\t\t\t\tdata: data1,\n\t\t\t\t\t\tbackgroundColor: bgColor1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Grid',\n\t\t\t\t\t\tdata: data2,\n\t\t\t\t\t\tbackgroundColor: bgColor2,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Solar',\n\t\t\t\t\t\tdata: data3,\n\t\t\t\t\t\tbackgroundColor: bgColor3,\n\t\t\t\t\t}\n\t\t\t\t]\n\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\taspectRatio: 1,\n\t\t\t\tscales: {\n\t\t\t\t\tx: {\n\t\t\t\t\t\tstacked: true,\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ty: {\n\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstacked: true,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: 'MegaWatt'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\talign: 'end',\n\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t// title:{\n\t\t\t\t\t//     align:'start',\n\t\t\t\t\t//     display:true,\n\t\t\t\t\t//     text:'Energy consumption trend'\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tsolar();\n\n\tfunction solar() {\n\t\t//     const ctx = document.getElementById('meterGaugeChart1').getContext('2d');\n\t\t//     const doughnut2Label={\n\t\t//             id: 'doughnut2Label',\n\t\t//             afterDraw(chart, args, options){\n\t\t//                 const {ctx, chartArea:{top,bottom,left,write,width, height}} = chart;\n\t\t//                 chart.data.datasets.forEach((dataset,i)=>{\n\t\t//                     chart.getDatasetMeta(i).data.forEach((dataPoint,index)=>{\n\n\t\t//                         const {x,y}=dataPoint.tooltipPosition();\n\t\t//                         const value = dataPoint.$context.raw;\n\t\t//                         const percentageValue = value\n\t\t//                         const text = percentageValue+\"%\";\n\t\t//                         ctx.font = 'bold 15px sans-serif';\n\t\t//                         ctx.fillStyle = 'white';\n\t\t//                         ctx.fillText(text,x-10,y+8);\n\t\t//                     });\n\t\t//                 });\n\t\t//             }\n\t\t//         }\n\t\t//     const doughnut2centerText={\n\t\t//             id: 'doughnutcenter2Text',\n\t\t//             afterDatasetsDraw(chart, args, pluginOptions){\n\t\t//                 const {ctx}=chart;\n\t\t//                 const text1 = 'Utility';\n\t\t//                 ctx.textAlign = 'center';\n\t\t//                 ctx.textBaseLine = 'middle';\n\t\t//                 ctx.font = 'normal 16px sans-serif';\n\t\t//                 ctx.fillStyle = 'white';\n\t\t//                 const textWidth1 = ctx.measureText(text1).width;\n\t\t//                 const x=chart.getDatasetMeta(0).data[0].x;\n\t\t//                 const y=chart.getDatasetMeta(0).data[0].y;\n\t\t//                 ctx.fillText(text1,x,y-10);\n\t\t//                 const text2='Cost';\n\t\t//                 ctx.fillText(text2,x,y+10);\n\t\t//             }\n\t\t//         }\n\t\t//     new Chart(ctx, {\n\t\t//     type: 'doughnut',\n\t\t//     data: {\n\t\t//       labels: ['DG', 'Grid', 'Solar'],\n\t\t//       datasets: [{\n\t\t//         label: '',\n\t\t//         data: [18, 36, 46],\n\t\t//         backgroundColor: [\n\t\t//           'rgb(0, 250, 175)',\n\t\t//           'rgb(219, 255, 0)',\n\t\t//           'rgb(249, 149, 106)'\n\t\t//         ],\n\t\t//         hoverOffset: 4,\n\t\t//         borderWidth: 0\n\t\t//       }]\n\t\t//     },\n\t\t//     options: {\n\t\t//         maintainAspectRatio: true,\n\t\t//         aspectRatio: 1.55,\n\t\t//       scales: {\n\t\t//         y: {\n\t\t//             grid: {\n\t\t//                 display:false\n\t\t//             },\n\t\t//             ticks: {\n\t\t//                 display: false\n\t\t//             },\n\t\t//             beginAtZero: true\n\t\t//         },\n\t\t//         x: {\n\t\t//             grid:{\n\t\t//                 display:false\n\t\t//             },\n\t\t//             ticks: {\n\t\t//                 display: false\n\t\t//             },\n\t\t//         }\n\t\t//       },\n\t\t//       plugins: {\n\t\t//         legend: {\n\t\t//             display: true,\n\t\t//             position: 'right',\n\t\t//             align:'center',\n\t\t//             labels:{\n\t\t//                 color:'white'\n\t\t//             }\n\t\t//         },\n\t\t//         datalabels: {\n\t\t//           formatter: (value, ctx) => {\n\t\t//             const datapoints = ctx.chart.data.datasets[0].data\n\t\t//              const total = datapoints.reduce((total, datapoint) => total + datapoint, 0)\n\t\t//             const percentage = value / total * 100\n\t\t//             return percentage.toFixed(2) + \"%\";\n\t\t//           },\n\t\t//           color: '#fff',\n\t\t//         }\n\t\t//     }\n\t\t//     },\n\t\t//     plugins:[doughnut2Label, doughnut2centerText]\n\t\t//   });\n\t\tconst gaugeText = {\n\t\t\tid: 'gaugeText',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tdata,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\tright,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tr\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\n\t\t\t\tctx.save();\n\t\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\t\tctx.font = '15px sans-serfi';\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.textBaseLine = 'top';\n\t\t\t\t// \t\t\tctx.textAlign = 'left';\n\t\t\t\t// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n\t\t\t\t// \t\t\tctx.textAlign = 'center';\n\t\t\t\t// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\t\tctx.font = '20px sans-serfi';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.fillText(pluginOptions.prod_perh + \"%\", xCoor, yCoor - 20);\n\t\t\t\tctx.font = '20px bold sans-serfi';\n\t\t\t\t// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\t\tctx.fillText(\"2148 KV\", xCoor, yCoor + 10);\n\t\t\t}\n\t\t};\n\t\tconst meter_chart_conf = {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '# of Votes',\n\t\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tcircumference: 180,\n\t\t\t\t\trotation: 270,\n\t\t\t\t\tcutout: '70%',\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tneedleValue: 55,\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\taspectRatio: 2,\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t// align:'start',\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'Solar Generation',\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t},\n\t\t\t\t\tgaugeText: {\n\t\t\t\t\t\tprod_perh: 50,\n\t\t\t\t\t\tprod_terph: 10,\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [gaugeText]\n\t\t};\n\n\t\tconst meter_ctx = document.getElementById('meterGaugeChart1');\n\t\tlet meter_context = new Chart(meter_ctx, meter_chart_conf);\n\t}\n\n\tpe();\n\n\tfunction pe() {\n\t\tconst gaugeText = {\n\t\t\tid: 'gaugeText',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tdata,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\tright,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tr\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\n\t\t\t\tctx.save();\n\t\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\t\tctx.font = '15px sans-serfi';\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.textBaseLine = 'top';\n\t\t\t\t// \t\t\tctx.textAlign = 'left';\n\t\t\t\t// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n\t\t\t\t// \t\t\tctx.textAlign = 'center';\n\t\t\t\t// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\t\tctx.font = '20px sans-serfi';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.fillText(pluginOptions.prod_perh, xCoor, yCoor - 20);\n\t\t\t\tctx.font = '20px bold sans-serfi';\n\t\t\t\t// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" PF\", xCoor, yCoor + 10);\n\t\t\t}\n\t\t};\n\t\tconst meter_chart_conf = {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '# of Votes',\n\t\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tcircumference: 180,\n\t\t\t\t\trotation: 270,\n\t\t\t\t\tcutout: '70%',\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tneedleValue: 55,\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\taspectRatio: 2,\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t// align:'start',\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'PF',\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t},\n\t\t\t\t\tgaugeText: {\n\t\t\t\t\t\tprod_perh: 0.965,\n\t\t\t\t\t\tdoughnutBottomValue: 1,\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [gaugeText]\n\t\t};\n\n\t\tconst pf_chart_ctx = document.getElementById('pf_chart');\n\t\tlet meter_context = new Chart(pf_chart_ctx, meter_chart_conf);\n\t}\n\n\tmd_max();\n\n\tfunction md_max() {\n\t\tconst gaugeText = {\n\t\t\tid: 'gaugeText',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {\n\t\t\t\t\tctx,\n\t\t\t\t\tdata,\n\t\t\t\t\tchartArea: {\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbottom,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\tright,\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tr\n\t\t\t\t\t}\n\t\t\t\t} = chart;\n\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// \t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\n\t\t\t\tctx.save();\n\t\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\t// ctx.fillRect(xCoor, yCoor, 400, 1);\n\n\t\t\t\tctx.font = '15px sans-serfi';\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.textBaseLine = 'top';\n\t\t\t\t// \t\t\tctx.textAlign = 'left';\n\t\t\t\t// \t\t\tctx.fillText('Current Rate', left, yCoor + 20);\n\t\t\t\t// \t\t\tctx.textAlign = 'center';\n\t\t\t\t// \t\t\tctx.fillText('Target: ' + pluginOptions.prod_terph, right, yCoor );\n\n\t\t\t\tctx.font = '20px sans-serfi';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.fillText(pluginOptions.doughnutCenterValue, xCoor, yCoor - 20);\n\t\t\t\tctx.font = '20px bold sans-serfi';\n\t\t\t\t// \t\t\tctx.fillText(pluginOptions.prod_perh + \"/h\", xCoor, yCoor+10);\n\t\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" MV\", xCoor, yCoor + 10);\n\t\t\t}\n\t\t};\n\t\tconst meter_chart_conf = {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '# of Votes',\n\t\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\t\tbackgroundColor: ['rgb(210, 85, 31)', 'rgb(217, 217, 217)'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tcircumference: 180,\n\t\t\t\t\trotation: 270,\n\t\t\t\t\tcutout: '70%',\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tneedleValue: 55,\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\taspectRatio: 2,\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t// align:'start',\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'MD (max)',\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t},\n\t\t\t\t\tgaugeText: {\n\t\t\t\t\t\tdoughnutCenterValue: 3.34,\n\t\t\t\t\t\tdoughnutBottomValue: 10,\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [gaugeText]\n\t\t};\n\n\t\tconst md_max_chart_ctx = document.getElementById('md_max_chart');\n\t\tnew Chart(md_max_chart_ctx, meter_chart_conf);\n\t}\n\n\tmd_highest();\n\n\tfunction md_highest() {\n\t\tconst gaugeText = {\n\t\t\tid: 'gaugeText',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {ctx,data,chartArea: {top,bottom,left,right,width,height},scales: {r}} = chart;\n\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\tconsole.log(\"doughnut\",height,width,doughnutSize);\n\t\t\t\tlet textSize = doughnutSize / 5; \n\t\t\t\tlet fontHeight = doughnutSize / 5;\n\n\t\t\t\tctx.save();\n\t\t\t\tconst xCoor = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst yCoor = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.textBaseLine = 'top';\n\t\t\t\tctx.font = `${textSize*.8}px sans-serfi`;\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.fillText(pluginOptions.prod_perh, xCoor, yCoor - fontHeight);\n\t\t\t\tctx.font = `bold ${textSize}px sans-serfi`;\n\t\t\t\tctx.fillText(pluginOptions.doughnutBottomValue + \" MV\", xCoor, yCoor+3 );\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t};\n\t\t\n\t\tconst doughnut2centerText = {\n\t\t\tid: 'doughnutcenter2Text',\n\t\t\tafterDatasetsDraw(chart, args, pluginOptions) {\n\t\t\t\tconst {ctx,chartArea: {top,bottom,left,write,width,height}} = chart;\n\t\t\t\tlet doughnutSize = height > width ? width : height;\n\t\t\t\t// console.log(\"doughnut\",height,width,doughnutSize)\n\t\t\t\tlet textSize = doughnutSize / 15;\n\t\t\t\tlet fontHeight = doughnutSize / 25;\n\t\t\t\t// console.log(\"Text Size\",textSize)\n\t\t\t\tconst text1 = 'Utility';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseLine = 'middle';\n\t\t\t\tctx.font = `normal ${textSize}px sans-serif`;\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tconst textWidth1 = ctx.measureText(text1).width;\n\t\t\t\tconst x = chart.getDatasetMeta(0).data[0].x;\n\t\t\t\tconst y = chart.getDatasetMeta(0).data[0].y;\n\t\t\t\tctx.fillText(text1, x, y - fontHeight);\n\t\t\t\tconst text2 = 'Cost';\n\t\t\t\tctx.fillText(text2, x, y + fontHeight);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t\tconst meter_chart_conf = {\n\t\t\ttype: 'doughnut',\n\t\t\tdata: {\n\t\t\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\t\t\tdatasets: [{\n\t\t\t\t\tlabel: '# of Votes',\n\t\t\t\t\tdata: [33.3, 33.3],\n\t\t\t\t\tbackgroundColor: ['rgb(0, 123, 255)', 'rgb(217, 217, 217)'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tcircumference: 180,\n\t\t\t\t\trotation: 270,\n\t\t\t\t\tcutout: '70%',\n\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\tneedleValue: 55,\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\taspectRatio: 2,\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tplugins: {\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t// align:'start',\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: 'MD (highest) for month',\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false\n\t\t\t\t\t},\n\t\t\t\t\tgaugeText: {\n\t\t\t\t\t\tprod_perh: 33.3,\n\t\t\t\t\t\tdoughnutBottomValue: 10,\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: [gaugeText]\n\t\t};\n\n\t\tconst md_hightest_ctx = document.getElementById('md_hightest_chart');\n\t\tnew Chart(md_hightest_ctx, meter_chart_conf);\n\t}\n\tself.onResize();\n}\nself.onResize = function() {\n\tconst $scope = self.ctx.$scope;\n\t$scope.height = self.ctx.height;\n\t$scope.width = self.ctx.width;\n}\nself.onDestroy = function() {\n\tclearInterval(self.ctx.intvl);\n}",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Dashboard\"}"
    },
    "bundleAlias" : "bat",
    "createdTime" : 1694928531956,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "162c8b40-551b-11ee-91e6-9d6138fe9e87"
    },
    "tenantId" : {
      "entityType" : "TENANT",
      "id" : "6a594940-e4c5-11ed-8f65-1f1c5e01f03a"
    }
  } ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}